DEFINE

// Tabelas iniciais
VAR __tabelas = INFO.TABLES()
VAR __colunas = INFO.COLUMNS()
VAR __medidas = INFO.MEASURES()
VAR __formatos = INFO.FORMATSTRINGDEFINITIONS()
VAR __relacionamentos = INFO.RELATIONSHIPS()
VAR __gruposCalculos = INFO.CALCULATIONGROUPS()
VAR __itensCalculos = INFO.CALCULATIONITEMS()
VAR __dependencias = INFO.CALCDEPENDENCY()
VAR __particoes = INFO.PARTITIONS()


// Medidas
VAR __medidasPre = 
	ADDCOLUMNS(
    		__medidas,
    		"Tabela",
		VAR __TabelaID = [TableID] RETURN
	    	MAXX(FILTER(__tabelas, [ID] = __TabelaID), [Name]),
    		"Formato",
		VAR __MedidaID = [ID] RETURN
	    	MAXX(FILTER(__formatos, [ObjectID] = __MedidaID), [Expression])
	)

VAR __medidasResultado =
SELECTCOLUMNS(
	__medidasPre,
	"Tabela", [Tabela],
	"Medida", [Name],
	"Expressao", [Expression],
	"Formato", [FormatString],
	"EstaOculto", [IsHidden],
	"Descricao", [Description],
	"Tipo",
	SWITCH(
		[DataType],
		2, "String",
		6, "Whole Number",
		8, "Double",
		9, "Datetime",
		10, "Currency",
		11, "Boolean"
	),
	"Pasta", [DisplayFolder]
) 

// Colunas
VAR __colunasPre =
ADDCOLUMNS(
	FILTER(
		__colunas,
		NOT CONTAINSSTRING([ExplicitName], "RowNumber")
	),
	"TabelaNome",
	VAR __TabelaID = [TableID] RETURN
	MAXX(FILTER(__tabelas, [ID] = __TabelaID), [Name])
)

VAR __colunasResultado =
SELECTCOLUMNS(
	__colunasPre,
    "Tabela", [TabelaNome],
    "Coluna", COALESCE([ExplicitName], [InferredName]),
    "OrdenadaPor",
		VAR __OrderID = [SortByColumnID] RETURN
	    MAXX(FILTER(__colunasPre, [ID] = __OrderID), [ExplicitName]),
    "Formato", COALESCE([FormatString], "String"),
    "Pasta", [DisplayFolder],
    "EstaOculto", [IsHidden],
    "Expressao", [Expression]
)

// Relacionamentos
VAR __relacionamentosPre =
ADDCOLUMNS(
    __relacionamentos,
    "DeTabela",
		VAR __DeTabela = [FromTableID] RETURN
		MAXX(FILTER(__colunasPre, [TableID] = __DeTabela), [TabelaNome]),
    "ParaTabela",
		VAR __ParaTabela = [ToTableID] RETURN
	    MAXX(FILTER(__colunasPre, [TableID] = __ParaTabela), [TabelaNome]),
    "DeColuna",
		VAR __DeColuna = [FromColumnID] RETURN
	    MAXX(
			FILTER( __colunasPre, [ID] = __DeColuna ),
			COALESCE( [ExplicitName], [InferredName] )),
    "ParaColuna",
	VAR __ParaColuna = [ToColumnID]
	RETURN
	    MAXX(
		FILTER( __colunasPre, [ID] = __ParaColuna ),
		COALESCE( [ExplicitName], [InferredName] )
	    )
)

VAR __relacionamentosResultado =
SELECTCOLUMNS(
    __relacionamentosPre,
    "ID", [ID], 
    "DeTabela", [DeTabela],
    "DeColuna", [DeColuna],
    "DeCardinalidade", IF([FromCardinality] = 2, "*", [FromCardinality]),
    "De", "'" & [DeTabela] & "'" & "[" & [DeColuna] & "]",
    "ParaTabela", [ParaTabela],
    "ParaColuna", [ParaColuna],
    "ParaCardinalidade", IF( [ToCardinality] = 2, "*", [ToCardinality]),
    "Para",	"'" & [ParaTabela] & "'" & "[" & [ParaColuna] & "]",
    "EstaAtivo", [IsActive],
    "Sentido", IF([CrossFilteringBehavior] = 2, "Ambos", "Único"),
    "DePara",
		VAR __De = "'" & [DeTabela] & "'" & "[" & [DeColuna] & "]"
		VAR __Para = "'" & [ParaTabela] & "'" & "[" & [ParaColuna] & "]"
		VAR __DeCardinalidade = IF([FromCardinality] = 2, "*", [FromCardinality])
		VAR __ParaCardinalidade = IF([ToCardinality] = 2, "*", [ToCardinality])
		VAR __Flecha = IF([CrossFilteringBehavior] = 2, "<->", "<-")
		RETURN
	    	__De & " " & __deCardinalidade & " " & __Flecha & " " & __ParaCardinalidade & " " & __Para
)

// Grupos de Cálculos
VAR __itensCalculosPre =
ADDCOLUMNS(
    ADDCOLUMNS(
	__itensCalculos,
	"TabelaID",
	    VAR __GrupoCalculo_ID = [CalculationGroupID] RETURN
		MAXX(FILTER(__gruposCalculos, [ID] = __GrupoCalculo_ID), [TableID]),
	"Precedencia",
	    VAR __GrupoCalculo_ID = [CalculationGroupID] RETURN
		MAXX(FILTER(__gruposCalculos, [ID] = __GrupoCalculo_ID), [Precedence])
    ),
    "GrupoCalculo",
		VAR __Tabela_ID = [TabelaID] RETURN
	    MAXX(FILTER(__tabelas, [ID] = __Tabela_ID), [Name]),
    "Formato",
		VAR __Formato_ID = [FormatStringDefinitionID] RETURN
	    MAXX(FILTER(__formatos, [ID] = __Formato_ID), [Expression]),
    "ColunaGrupoCalculo",
		VAR __Tabela_ID = [TabelaID]
		VAR __Coluna_ID = MINX(FILTER(__colunas, [TableID] = __Tabela_ID), [ID])
		RETURN
		    MAXX(
				FILTER( __colunas, [ID] = __Coluna_ID ),
				COALESCE( [ExplicitName], [InferredName] )
		    ),
    "ColunaOrdinal",
		VAR __Tabela_ID = [TabelaID]
		VAR __Coluna_ID = MAXX(FILTER(__colunas, [TableID] = __Tabela_ID), [ID])
		RETURN
		    MAXX(
				FILTER( __colunas, [ID] = __Coluna_ID ),
				COALESCE( [ExplicitName], [InferredName] )
		    )
)

VAR __gruposCalculosResultado =
SELECTCOLUMNS(
    __itensCalculosPre,
    "GrupoCalculo", [GrupoCalculo],
    "Precedencia", [Precedencia],
    "ItemCalculo", [Name],
    "Expressao", [Expression],
    "Formato", [Formato],
    "Ordinal", [Ordinal],
    "ColunaGrupoCalculo", [ColunaGrupoCalculo],
    "ColunaOrdinal", [ColunaOrdinal]
)

VAR __parametrosResultado =
SELECTCOLUMNS(
	SUMMARIZE(
	    FILTER(
			__dependencias,
			[REFERENCED_OBJECT_TYPE] = "M_EXPRESSION" && 
			CONTAINSSTRING( [REFERENCED_EXPRESSION], "IsParameterQuery" )
		),
		[REFERENCED_OBJECT],
		[REFERENCED_EXPRESSION]
	),
    "Nome", [REFERENCED_OBJECT],
    "Expressao", [REFERENCED_EXPRESSION]
)


// Queries M ou DAX das tabelas
VAR __particoesResultado =
SELECTCOLUMNS(
    __particoes,
    "TabelaID", [TableID],
    "TabelaNome", [Name],
    "Descricao", [Description],
    "Codigo", [QueryDefinition],
    "ModificadoEm", [ModifiedTime],
    "AtualizadoEm", [RefreshedTime],
    "Tipo", SWITCH( [Type], 4, "M", 2, "DAX", 7, "Interno" )
)

// Saída dos dados
EVALUATE __medidasResultado ORDER BY [Tabela] ASC, [Medida] ASC
EVALUATE __colunasResultado ORDER BY [Tabela] ASC, [Coluna] ASC
EVALUATE __relacionamentosResultado ORDER BY [DePara] ASC
EVALUATE __gruposCalculosResultado ORDER BY [Precedencia] ASC, [Ordinal] ASC
EVALUATE __parametrosResultado 
EVALUATE __particoesResultado ORDER BY [TabelaID] ASC 
